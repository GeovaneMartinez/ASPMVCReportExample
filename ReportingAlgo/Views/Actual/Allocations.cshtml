@model ReportingAlgo.Models.AllocationsViewModel

@{
    ViewBag.Title = "Allocations";
}

<h2>Allocations</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Allocations</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    @for (var i = 0; i < Model.allocations.Count(); i++)
    {
        @Html.HiddenFor(model => Model.allocations[i].ID)
        @Html.HiddenFor(model => Model.allocations[i].Strategy)
    <div class="form-group">
        <label class="control-label col-md-2">@Model.allocations[i].Strategy</label>
        @*@Html.EditorFor(model => Model.allocations[i].Strategy, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => Model.allocations[i].Strategy, "", new { @class = "text-danger" })*@
        @*@Html.LabelFor(model => Model.allocations[i].Strategy, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-2">
            @Html.EditorFor(model => Model.allocations[i].Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => Model.allocations[i].Amount, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-2">
            @Html.EditorFor(model => Model.allocations[i].IsActive, new { htmlAttributes = new { @class = "form-control allocationsDropdown" } })
            
        </div>
    </div>

        @*<div class="form-group">
                @Html.LabelFor(model => Model.allocations[i].Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.allocations[i].Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.allocations[i].Amount, "", new { @class = "text-danger" })
                </div>
            </div>*@
    }

    @*<div class="form-group">
            @Html.LabelFor(model => model.Strategy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Strategy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Strategy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script>

    $(document).ready(function () {
        $(".allocationsDropdown").each(function () {

            if ($(this).val() == 'true') {
                $(this).css("background", "lightgreen");
            }
            else {
                $(this).css("background", "lightcoral");
            }
            
        });
        $(".allocationsDropdown").change(function () {
            if ($(this).val() == 'true') {
                $(this).css("background", "lightgreen");
            }
            else {
                $(this).css("background", "lightcoral");
            }
        });
    });

</script>